// generated by Fast Light User Interface Designer (fluid) version 1.0302

#include "NeoStore.h"
#include "RepositoryManager.h"
#include <FL/fl_message.H>

Fl_Double_Window* NeoStore::create_window() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(729, 576, "Neo Store");
    w = o;
    o->user_data((void*)(this));
    { available_packages = new Fl_Browser(6, 24, 213, 546, "Packages:");
      available_packages->type(2);
      available_packages->callback((Fl_Callback*)package_selected, (void*)(this));
      available_packages->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      available_packages->when(3);
    } // Fl_Browser* available_packages
    { package_description = new Fl_Help_View(222, 24, 501, 417, "Description:");
    } // Fl_Help_View* package_description
    { package_detail = new Fl_Help_View(222, 444, 501, 90);
    } // Fl_Help_View* package_detail
    { install_button = new Fl_Button(624, 540, 99, 27, "Install");
      install_button->callback((Fl_Callback*)install_package, (void*)(this));
    } // Fl_Button* install_button
    { remove_button = new Fl_Button(222, 540, 99, 27, "Remove");
      remove_button->callback((Fl_Callback*)remove_package, (void*)(this));
    } // Fl_Button* remove_button
    o->end();
    o->resizable(o);
  } // Fl_Double_Window* o
  return w;
}

void NeoStore::package_selected(Fl_Browser* browser, NeoStore* self) {
  int current = browser->value();
  
  if(browser->data(current) == NULL)
  	return;
  
  Repository::Package p = *(Repository::Package*) browser->data(current);
  
  std::string detail;
  
  detail += "<br><br><table>";
  detail += "<tr><td>Author:<td>"+p.author+"</td></tr>";
  detail += "<tr><td>Version:<td>"+p.version+"</td></tr>";
  detail += "<tr><td>License:<td>"+p.license+"</td></tr>";
  detail += "</table>";
  
  self->package_description->value(p.description.c_str());
  self->package_detail->value(detail.c_str());
  
  if(RepositoryManager::getInstance()->isInstalled(p.name.c_str()))
  {
  	self->install_button->deactivate();
  	self->remove_button->activate();
  }
  else
  {
  	self->install_button->activate();
  	self->remove_button->deactivate();
  }
}

void NeoStore::install_package(Fl_Button* btn, NeoStore* self) {
  int current = self->available_packages->value();
  
  if(self->available_packages->data(current) == NULL)
  	return;
  
  Repository::Package p = *(Repository::Package*) self->available_packages->data(current);
  
  if(RepositoryManager::getInstance()->installPackage(p))
  {
  	fl_message("Package was successfully installed!");
  	self->install_button->deactivate();
  	self->remove_button->activate();
  }
  else
  {
  	fl_message("Could not install package!");
  }
}

void NeoStore::remove_package(Fl_Button* btn, NeoStore* self) {
  int current = self->available_packages->value();
  
  if(self->available_packages->data(current) == NULL)
  	return;
  
  Repository::Package p = *(Repository::Package*) self->available_packages->data(current);
  
  if(RepositoryManager::getInstance()->removePackage(p))
  {
  	fl_message("Package was successfully removed!");
  	self->install_button->activate();
  	self->remove_button->deactivate();
  }
  else
  {
  	fl_message("Could not remove package!");
  }
}

IF(${SWIG_FOUND})
	MESSAGE("-- Generating Lua bindings for Neo")

  	SET(CMAKE_SHARED_LIBRARY_PREFIX "")
	INCLUDE_DIRECTORIES(
	  ${NEO_CORE_INCLUDE_DIR}
	  ${NEO_ENGINE_INCLUDE_DIR}
	  ${NEOGUI_INCLUDE_DIR}
	  ${SDL_INCLUDE_DIR}
	  ${LUA_INCLUDE_DIR}
          ${MONO_INCLUDE_DIR}
	)

	EXECUTE_PROCESS(
		COMMAND ${SWIG_EXECUTABLE} -lua -c++ -I${NEO_CORE_INCLUDE_DIR} -I${CMAKE_CURRENT_SOURCE_DIR}/Includes 
			-I${NEO_CORE_INCLUDE_DIR}/.. -I${NEO_ENGINE_INCLUDE_DIR}/.. -I${NEOGUI_INCLUDE_DIR}/.. -I${NEOGUI_INCLUDE_DIR} 
                        ${CMAKE_CURRENT_SOURCE_DIR}/Neo.i

		OUTPUT_VARIABLE SWIG_swiglib_output
		ERROR_VARIABLE SWIG_swiglib_error
		RESULT_VARIABLE SWIG_swiglib_result
		)

	ADD_CUSTOM_TARGET(neo-swig
		COMMAND ${SWIG_EXECUTABLE} -lua -c++ -I${NEO_CORE_INCLUDE_DIR} -I${NEO_ENGINE_INCLUDE_DIR} -I${NEOGUI_INCLUDE_DIR} 
			-I${NEO_CORE_INCLUDE_DIR}/.. -I${NEO_ENGINE_INCLUDE_DIR}/.. -I${NEOGUI_INCLUDE_DIR}/.. 
                        ${CMAKE_CURRENT_SOURCE_DIR}/Neo.i
		)

  	IF(${ENABLE_MONO})
  	
  		FILE(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/Swig)
  		  		
	  	EXECUTE_PROCESS(
	  		COMMAND ${SWIG_EXECUTABLE} -csharp -c++ -outdir ${CMAKE_BINARY_DIR}/Swig -I${NEO_CORE_INCLUDE_DIR} -I${NEO_ENGINE_INCLUDE_DIR}
	  			-I${NEO_CORE_INCLUDE_DIR}/.. -I${NEO_ENGINE_INCLUDE_DIR}/.. -I${NEOGUI_INCLUDE_DIR}/.. -I${NEOGUI_INCLUDE_DIR} 
                                -dllimport Game.so ${CMAKE_CURRENT_SOURCE_DIR}/NeoSharp.i

			OUTPUT_VARIABLE SWIG_swiglib_output
			ERROR_VARIABLE SWIG_swiglib_error
			RESULT_VARIABLE SWIG_swiglib_result
		)

	  	ADD_CUSTOM_TARGET(neo-mono-swig
			COMMAND ${SWIG_EXECUTABLE} -csharp -c++ -outdir ${CMAKE_BINARY_DIR}/Swig -I${NEO_CORE_INCLUDE_DIR} -I${NEO_ENGINE_INCLUDE_DIR}
				-I${NEO_CORE_INCLUDE_DIR}/.. -I${NEO_ENGINE_INCLUDE_DIR}/.. -I${NEOGUI_INCLUDE_DIR}/.. -I${NEOGUI_INCLUDE_DIR} 
                                -dllimport Game.so NeoSharp ${CMAKE_CURRENT_SOURCE_DIR}/NeoSharp.i
			)
			
		FILE(GLOB_RECURSE SWIG_SOURCES ${CMAKE_BINARY_DIR}/Swig/*.cs)
                FILE(GLOB_RECURSE PLUGIN_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/NeoSharp/*.cpp)
		
		ADD_CUSTOM_TARGET(build-neo-sharp ALL ${GMCS_EXECUTABLE} -t:library -out:${NEO_BINARY_OUTPUT}/NeoSharp.dll ${SWIG_SOURCES})
		
		IF(NOT ANDROID AND NOT EMSCRIPTEN)
                        ADD_LIBRARY(Game SHARED ${PLUGIN_SOURCES} NeoSharp_wrap.cxx)
		ELSE()
                        ADD_LIBRARY(Game SHARED ${PLUGIN_SOURCES} NeoSharp_wrap.cxx)
		ENDIF()

                TARGET_LINK_LIBRARIES(Game ${NEO_CORE_LIBRARIES} ${NEO_ENGINE_LIBRARIES} ${NEOGUI_LIBRARIES} ${MONO_LIBRARIES})


                ## Install C# plugin
                INSTALL(TARGETS Game DESTINATION ${NEO_INSTALL_DIR})
                INSTALL(FILES ${NEO_BINARY_OUTPUT}/NeoSharp.dll DESTINATION ${NEO_INSTALL_DIR})
  	ENDIF()

        ADD_LIBRARY(Neo SHARED Neo_wrap.cxx)
	TARGET_LINK_LIBRARIES(Neo ${NEO_CORE_LIBRARIES} ${NEO_ENGINE_LIBRARIES} ${NEOGUI_LIBRARIES})

  IF(NOT ${SWIG_swiglib_result} EQUAL 0)
	MESSAGE(SEND_ERROR "-- Generating Lua bindings for Neo failed with output:\n${SWIG_swiglib_error}")
  ENDIF(NOT ${SWIG_swiglib_result} EQUAL 0)

    ## Install Lua API
    INSTALL(TARGETS Neo DESTINATION ${NEO_INSTALL_DIR})

ELSE()
  MESSAGE("-- Will NOT generate Lua bindings for Neo")
ENDIF()

